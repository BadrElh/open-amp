
include ../Makefile.commons

SAMPLE_OUT := samples/master/nucleus/matrix_multiply/nucleus_nucleusbm/matrix_multiply.out
SAMPLE_C_SRC := samples/master/nucleus/matrix_multiply/nucleus_nucleusbm/matrix_multiply.c

REMOTE_OUT   := matrix_multiply.out
DST_DIR := samples/master/nucleus/matrix_multiply/nucleus_nucleusbm
NU_SRC_DIR := firmware/$(PLAT)/nucleus/matrix_multiply
BM_SRC_DIR := firmware/$(PLAT)/baremetal/matrix_multiply


SAMPLEOBJFILES := $(patsubst %.c, %.o, $(SAMPLE_C_SRC))


SAMPLE_DEPS := $(patsubst %.c, %.d, $(SAMPLE_C_SRC))

SAMPLE_MAP := $(patsubst %.out, %.map, $(SAMPLE_OUT))
SAMPLE_BIN := $(patsubst %.out, %.bin, $(SAMPLE_OUT))


$(SAMPLE_OUT): $(REMOTE_OUT) $(SAMPLEOBJFILES)

	@echo 'Building master core matrix multiply sample for nucleus : $@'

	$(LD)  -Wl,-Map=samples/master/nucleus/matrix_multiply/nucleus_nucleusbm/matrix_multiply.map  -nostartfiles -Wl,--gc-sections -Wl,--wrap=malloc -Wl,--wrap=calloc -Wl,--wrap=realloc -Wl,--wrap=free -T"$(OHOME)/libs/system/$(PLAT)/nucleus/linker_master.ld" -L"$(OHOME)/libs/system/$(PLAT)/nucleus/lib/$(CROSS)/master" -L"$(OHOME)/libs/open_amp" -o "$(SAMPLE_OUT)" -Wl,--start-group $(SAMPLEOBJFILES) $(DST_DIR)/firmware1.o $(DST_DIR)/firmware2.o -lnucleus_master -lopen_amp -lc -lm -lstdc++ -Wl,--end-group 	
	
	$(OBJCPY) -O binary $(SAMPLE_OUT) $(SAMPLE_BIN)
	
	@echo 'Finished building target: $@'
	
%.o:%.c
	@echo CC $(<:.c=.o)
	@$(CC) $(CFLAGS) $(ARCH_CFLAGS) $(INCLUDE) -c $< -o $@
	
%.o:%.S
	@$(AS) -c -mcpu=cortex-a9 $(ARCH_ASFLAGS) $(INCLUDE) $< -o $@
	
$(REMOTE_OUT):
	cd $(NU_SRC_DIR)/; cp firmware firmware1; \
	$(OBJCPY) -I binary -O elf32-littlearm -B arm firmware1 firmware1.o
	mv $(NU_SRC_DIR)/firmware1.o $(DST_DIR)/
	cd $(BM_SRC_DIR)/; cp firmware firmware2; \
	$(OBJCPY) -I binary -O elf32-littlearm -B arm firmware2 firmware2.o
	mv $(BM_SRC_DIR)/firmware2.o $(DST_DIR)/
	cd $(NU_SRC_DIR)/; rm firmware1
	cd $(BM_SRC_DIR)/; rm firmware2
clean:
	-$(RM) $(SAMPLEOBJFILES) $(SAMPLE_DEPS) $(SAMPLE_OUT) $(SAMPLE_MAP) $(SAMPLE_BIN) $(DST_DIR)/firmware1.o $(DST_DIR)/firmware2.o
	
post-build:
	-@echo ' '

secondary-outputs:

PHONY: all clean dependents
.SECONDARY: post-build
